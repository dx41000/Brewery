// <auto-generated />
using Brewery.Datalayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Brewery.Datalayer.Migrations
{
    [DbContext(typeof(BreweryContext))]
    partial class BreweryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BarBeer", b =>
                {
                    b.Property<long>("BarsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BeersId")
                        .HasColumnType("bigint");

                    b.HasKey("BarsId", "BeersId");

                    b.HasIndex("BeersId");

                    b.ToTable("BarBeer");
                });

            modelBuilder.Entity("BeerBrewery", b =>
                {
                    b.Property<long>("BeersId")
                        .HasColumnType("bigint");

                    b.Property<long>("BreweriesId")
                        .HasColumnType("bigint");

                    b.HasKey("BeersId", "BreweriesId");

                    b.HasIndex("BreweriesId");

                    b.ToTable("BeerBrewery");
                });

            modelBuilder.Entity("Brewery.Datalayer.Entities.Bar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Bars", (string)null);
                });

            modelBuilder.Entity("Brewery.Datalayer.Entities.Beer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PercentageAlcoholByVolume")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Beers", (string)null);
                });

            modelBuilder.Entity("Brewery.Datalayer.Entities.Brewery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Breweries", (string)null);
                });

            modelBuilder.Entity("BarBeer", b =>
                {
                    b.HasOne("Brewery.Datalayer.Entities.Bar", null)
                        .WithMany()
                        .HasForeignKey("BarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Brewery.Datalayer.Entities.Beer", null)
                        .WithMany()
                        .HasForeignKey("BeersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerBrewery", b =>
                {
                    b.HasOne("Brewery.Datalayer.Entities.Beer", null)
                        .WithMany()
                        .HasForeignKey("BeersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Brewery.Datalayer.Entities.Brewery", null)
                        .WithMany()
                        .HasForeignKey("BreweriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
